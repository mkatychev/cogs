on:
  pull_request:
    branches:
    - '*'
  push:
    branches:
      - master
name: Test
jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: unit
      run: go test ./...
  integration-test:
    strategy:
      matrix:
        out: [json, toml, yaml, dotenv, list]
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Import GPG Key
      run: gpg --import ./test_files/sops_functional_tests_key.asc
    - name: gen docker
      run: go run ./cmd/cogs gen examples/1.basic.cog.toml basic                 --out=${{ matrix.out }}
    - name: gen get
      run: go run ./cmd/cogs gen examples/2.http.cog.toml get                    --out=${{ matrix.out }}
    - name: gen post
      run: go run ./cmd/cogs gen examples/2.http.cog.toml post                   --out=${{ matrix.out }}
    - name: gen sops
      run: go run ./cmd/cogs gen examples/3.secrets.cog.toml sops                --out=${{ matrix.out }}
    - name: gen kustomize
      run: go run ./cmd/cogs gen examples/4.read_types.cog.toml kustomize        --out=${{ matrix.out }}
    - name: gen inheritor
      run: go run ./cmd/cogs gen examples/5.advanced.cog.toml inheritor          --out=${{ matrix.out }}
    - name: gen external_inheritor
      run: go run ./cmd/cogs gen examples/5.advanced.cog.toml external_inheritor --out=${{ matrix.out }}
    - name: gen flat_json
      run: go run ./cmd/cogs gen examples/5.advanced.cog.toml flat_json          --out=${{ matrix.out }}
    - name: gen complex_json
      run: go run ./cmd/cogs gen examples/5.advanced.cog.toml complex_json       --out=${{ matrix.out }}
    - name: gen envsubst
      run: go run ./cmd/cogs gen examples/6.envsubst.cog.toml envsubst           --out=${{ matrix.out }}
